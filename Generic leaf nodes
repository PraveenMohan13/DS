Given a generic tree, count and return the number of leaf nodes present in the given tree.

Input Format

The first line of input contains data of the nodes of the tree in level order form. The order is: data for root node, number of children to root node, data of each of child nodes and so on and so forth for each node. The data of the nodes of the tree is separated by space.

Constraints

Time Limit: 1 sec

Output Format

The first and only line of output prints the count of leaf nodes present in the given tree.

Sample Input 0

10 3 20 30 40 2 40 50 0 0 0 0 
Sample Output 0

4
Sample Input 1

1 1 2 1 3 1 4 1 5 0
Sample Output 1

1
==================================================================================================
python

from collections import deque

class Node:
    def __init__(self, data):
        self.data = data
        self.next = []

def leafCount(root):
    if root is None:
        return 0
    if len(root.next) == 0:
        return 1
    count = 0
    for i in root.next:
        count += leafCount(i)
    return count

def Tree(li):
    head = Node(li[0])
    q = deque()#object
    q.append(head)
    i=1
    while q:
        frontNode = q.pop()
        noOfChildren = li[i]
        i += 1
        for j in range(noOfChildren):
            data = li[i + j]
            nn = Node(data)
            frontNode.next.append(nn)
            q.append(nn)
        i += noOfChildren
    return head

if __name__ == "__main__":
    input = input().split()
    li = [int(x) for x in input]
    root = Tree(li)
    print(leafCount(root))
